name: Deploy

on:
    workflow_dispatch:
    workflow_run:
        workflows: ["Test"]
        types:
            - completed

jobs:
    deploy:
        runs-on: ubuntu-latest
        if: |
           github.ref == 'refs/heads/prod' && (
             github.event_name == 'workflow_dispatch' ||
             github.event.workflow_run.conclusion == 'success'
           )

        steps:
            - name: Check out repository
              uses: actions/checkout@v4
              with:
                fetch-depth: 1

            - name: Setup .env
              id: env-setup
              run: |
                if ! echo "${{ secrets.ENV_FILE }}" | base64 -d > .env 2>/dev/null; then
                  echo "Error: Invalid base64 in ENV_FILE secret"
                  exit 1
                fi

                if [ ! -s .env ]; then
                  echo "Warning: .env file is empty"
                  echo "env_vars=[]" >> $GITHUB_OUTPUT
                  exit 0
                fi

                ENV_VARS=$(while IFS= read -r line || [ -n "$line" ]; do
                  [[ -z "${line}" || "${line}" =~ ^[[:space:]]*# ]] && continue

                  key=$(echo "$line" | cut -d'=' -f1)
                  value=$(echo "$line" | cut -d'=' -f2-)

                  [[ -z "${key}" || -z "${value}" ]] && continue

                  echo "{\"key\":\"${key}\",\"value\":\"${value}\",\"isSecret\":true}"
                done < .env | jq -s .)

                if [ $? -ne 0 ]; then
                  echo "Error: Failed to parse environment variables"
                  exit 1
                fi

                echo "env_vars=$ENV_VARS" >> $GITHUB_OUTPUT


            - name: Update environment variables
              if: steps.env-setup.outputs.env_vars != '[]'
              run: |
                response=$(curl -s -w "\n%{http_code}" -X PUT \
                  "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/env-vars" \
                  -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
                  -H "Accept: application/json" \
                  -H "Content-Type: application/json" \
                  -d "${{ steps.env-setup.outputs.env_vars }}")

                status_code=$(echo "$response" | tail -n1)
                response_body=$(echo "$response" | sed '$d')

                if [ "$status_code" -ne 200 ]; then
                  echo "Failed to update environment variables. Status: $status_code"
                  echo "Response: $response_body"
                  exit 1
                fi

              env:
                  RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
                  RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}

            - name: Trigger deployment
              id: deploy
              run: |
                  response=$(curl -s -w "\n%{http_code}" "${{ secrets.RENDER_DEPLOY_HOOK_URL }}")
                  status_code=$(echo "$response" | tail -n1)
                  response_body=$(echo "$response" | sed '$d')
                  if [ "$status_code" -ne 200 ]; then
                    echo "Deployment trigger failed. Status: $status_code"
                    echo "Response: $response_body"
                    exit 1
                  fi

                  echo "Deployment triggered successfully"
